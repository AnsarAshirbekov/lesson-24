# а) Загрузите массив json – объектов с сайта jsonplaceholder, используя
# библиотеку requests.
# б) Сохраните циклом каждый в отдельный файл, в одну новую папку

import requests
import os
import json

# Запрашиваем данные с сайта
response = requests.get("https://jsonplaceholder.typicode.com/users")

# Так как с сайта мы получили HTTP-ответ в формате JSON, нужно преобразовать его в объект Python, то есть в список словарей
data = response.json()

# Для создания новой папки в той директории, в которой мы сейчас находимся, то есть откуда была запущена программа, нужно
# узнать путь текущей директории
current_dir = os.getcwd()
# Задаем название для новой папки
folder_name = 'JSON Folder'
# Создаем путь к новой папке
path = os.path.join(current_dir, folder_name)
# Создаем новую папку, передав ей путь
os.makedirs(path, exist_ok=True) # здесь используем .makedirs() а не .mkdir() для более гибкого подхода и исключения ошибки,
                                 # в случае если папка с таким названием и по такому пути уже существует. exist_ok=True
                                 # гарантирует, что если папка с таким названием уже существует, то никакой ошибки типа
                                 # FileExistsError не вылезет, а папка не будет создаваться, но файлы, которые должны будут
                                 # создаться, создадутся в существующей папке

# Пройдемся по каждому словарю в нашем списке словарей
for d in data:
    # каждый файл со словарем будет иметь название data_ и значение элемента словаря по ключу id
    file_name = f'data_{d["id"]}.json'
    # создаем путь для каждого такого файла, чтобы он находился в новосозданной папке
    file_path = os.path.join(path, file_name)
    # создаем новый файл json, передав ему не название файла file_name, а его путь file_path, чтобы файл обязательно создался
    # папке JSON Folder, а не в той папке, откуда будет запущена программа, то есть с текущей директории
    with open(file_path, 'w') as file:
        json.dump(d, file)